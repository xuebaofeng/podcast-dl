/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package bf.pd;

import de.odysseus.ithaka.audioinfo.AudioInfo;
import de.odysseus.ithaka.audioinfo.m4a.M4AInfo;
import de.odysseus.ithaka.audioinfo.mp3.ID3v2Exception;
import de.odysseus.ithaka.audioinfo.mp3.MP3Exception;
import de.odysseus.ithaka.audioinfo.mp3.MP3Info;

import java.io.*;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.stream.Collectors;

public class AudioCheck {

    public static void main(String[] args) throws Exception {
//        checkMp3();
        checkM4a();
    }

    private static void checkMp3() throws IOException, ID3v2Exception, MP3Exception {
        StringBuilder sb = new StringBuilder();
        ArrayList<Path> files = Files.walk(Paths.get("c:\\media\\podcast\\ljsw"))
                .filter(Files::isRegularFile)
                .collect(Collectors.toCollection(ArrayList::new));

        InputStream inputStream;
        for (Path path : files) {
            File file = path.toFile();
            inputStream = new BufferedInputStream(new FileInputStream(file));
            AudioInfo audioInfo = null;


            long fileLength = file.length();

            if (audioInfo == null) {
                try {
                    audioInfo = new MP3Info(inputStream, fileLength);
                } catch (IOException e) {
                    sb.append(file).append("\n");
                    continue;
                } finally {
                    inputStream.close();
                }
            }

            long duration = audioInfo.getDuration();
            if (duration == 0) continue;
            double x = fileLength / audioInfo.getDuration();
            if (x < 8) {
                System.out.println(file);
            }
        }

        if (sb.length() > 0)
            Files.writeString(Paths.get("error.log"), sb.toString());
    }

    private static void checkM4a() throws IOException, ID3v2Exception, MP3Exception {
        StringBuilder sb = new StringBuilder();
        ArrayList<Path> files = Files.walk(Paths.get("c:\\media\\podcast\\"))
                .filter((path) -> !path.toString().contains("ljsw") && Files.isRegularFile(path))
                .collect(Collectors.toCollection(ArrayList::new));

        InputStream inputStream;
        for (Path path : files) {
            File file = path.toFile();
            inputStream = new BufferedInputStream(new FileInputStream(file));
            AudioInfo audioInfo;

            try {
                audioInfo = new M4AInfo(inputStream);
            } catch (IOException e) {
                sb.append(file).append("\n");
                continue;
            } finally {
                inputStream.close();
            }

            long fileLength = file.length();

            double x = fileLength / audioInfo.getDuration();
            if (x < 7) {
                System.out.println(path + ": " + x);
                sb.append(path).append("\n");
                Files.delete(path);
            }
        }

        if (sb.length() > 0)
            Files.writeString(Paths.get("error.log"), sb.toString());
    }
}
